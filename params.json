{"name":"Eventdispatcher","tagline":"Easy to use event dispatcher for the java 1.8 environment","body":"### Usage\r\n**EventListener interface that extends the standard [java.util.EventListener](http://docs.oracle.com/javase/7/docs/api/java/util/EventListener.html) interface:**\r\n\r\n```java\r\nimport java.util.EventListener;\r\nimport java.util.EventObject;\r\n\r\npublic interface MyListener extends EventListener {\r\n\tpublic void myEventMethod(EventObject eventObject);\r\n}\r\n```\r\n\r\n**Class that fires the event:**\r\n\r\n```java\r\nimport java.util.EventObject;\r\nimport de.schlegel11.eventdispatcher.EventDispatcher;\r\n\r\npublic class MySomethingHappensClass {\r\n\r\n\tprivate final EventDispatcher eventDispatcher = EventDispatcher.newInstance();\r\n\t\r\n\tpublic void addListener(MyListener fireListener){\r\n\t\teventDispatcher.addListener(MyListener.class, fireListener);\r\n\t}\r\n\t\r\n\tpublic void removeListener(MyListener listener){\r\n\t\teventDispatcher.removeListener(MyListener.class, listener);\r\n\t}\r\n\t\r\n\tpublic void removeAllListeners(){\r\n\t\teventDispatcher.removeListenerType(MyListener.class);\r\n\t}\r\n\t\r\n\tpublic void somethingHappens(){\r\n\t\tEventObject eventObject = new EventObject(this);\r\n\t\teventDispatcher.fireEvent(MyListener.class, l -> l.myEventMethod(eventObject));\r\n\t}\r\n}\r\n```\r\n\r\n### JavaDoc\r\nFor more details see:\r\n[Javadoc](https://github.com/schlegel11/EventDispatcher/blob/feature/JavaDoc-Version-1.0/apidocs/index.html)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}